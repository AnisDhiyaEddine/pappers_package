/**
 * Pappers API
 * L'API de Pappers vous permet de récupérer des informations et documents sur les entreprises françaises à partir de leur numéro SIREN ou SIRET.  Vous devez indiquer votre clé d'API dans les requêtes, en utilisant le paramètre `api_token`.  L'URL d'accès à l'API est https://api.pappers.fr/v2/  Lien vers la documentation de la V1 : https://www.pappers.fr/api/documentation/v1  L'historique des modifications (changelog) est accessible à l'url suivante : https://www.pappers.fr/api/changelog 
 *
 * The version of the OpenAPI document: 2.3.0
 * Contact: support@pappers.fr
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Bodacc from './Bodacc';
import BodaccImmatriculationAllOf from './BodaccImmatriculationAllOf';

/**
 * The BodaccImmatriculation model module.
 * @module model/BodaccImmatriculation
 * @version 2.3.0
 */
class BodaccImmatriculation {
    /**
     * Constructs a new <code>BodaccImmatriculation</code>.
     * @alias module:model/BodaccImmatriculation
     * @extends module:model/Bodacc
     * @implements module:model/Bodacc
     * @implements module:model/BodaccImmatriculationAllOf
     */
    constructor() { 
        Bodacc.initialize(this);BodaccImmatriculationAllOf.initialize(this);
        BodaccImmatriculation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BodaccImmatriculation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BodaccImmatriculation} obj Optional instance to populate.
     * @return {module:model/BodaccImmatriculation} The populated <code>BodaccImmatriculation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BodaccImmatriculation();
            Bodacc.constructFromObject(data, obj);
            Bodacc.constructFromObject(data, obj);
            BodaccImmatriculationAllOf.constructFromObject(data, obj);

            if (data.hasOwnProperty('rcs')) {
                obj['rcs'] = ApiClient.convertToType(data['rcs'], 'String');
            }
            if (data.hasOwnProperty('nom_entreprise')) {
                obj['nom_entreprise'] = ApiClient.convertToType(data['nom_entreprise'], 'String');
            }
            if (data.hasOwnProperty('personne_morale')) {
                obj['personne_morale'] = ApiClient.convertToType(data['personne_morale'], 'Boolean');
            }
            if (data.hasOwnProperty('denomination')) {
                obj['denomination'] = ApiClient.convertToType(data['denomination'], 'String');
            }
            if (data.hasOwnProperty('nom')) {
                obj['nom'] = ApiClient.convertToType(data['nom'], 'String');
            }
            if (data.hasOwnProperty('prenom')) {
                obj['prenom'] = ApiClient.convertToType(data['prenom'], 'String');
            }
            if (data.hasOwnProperty('administration')) {
                obj['administration'] = ApiClient.convertToType(data['administration'], 'String');
            }
            if (data.hasOwnProperty('adresse')) {
                obj['adresse'] = ApiClient.convertToType(data['adresse'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Greffe de publication.
 * @member {String} rcs
 */
BodaccImmatriculation.prototype['rcs'] = undefined;

/**
 * Nom de l'entreprise concernée par la publication. Correspond à la dénomination en cas de personne morale et à nom + prenom en cas de personne physique.
 * @member {String} nom_entreprise
 */
BodaccImmatriculation.prototype['nom_entreprise'] = undefined;

/**
 * Vrai si l'entreprise concernée par la publication est une personne morale, faux si c'est une personne physique.
 * @member {Boolean} personne_morale
 */
BodaccImmatriculation.prototype['personne_morale'] = undefined;

/**
 * Dénomination de l'entreprise concernée par la publication (uniquement en cas de personne morale).
 * @member {String} denomination
 */
BodaccImmatriculation.prototype['denomination'] = undefined;

/**
 * Nom de la personne physique concernée par la publication (uniquement en cas de personne physique).
 * @member {String} nom
 */
BodaccImmatriculation.prototype['nom'] = undefined;

/**
 * Prénom de la personne physique concernée par la publication (uniquement en cas de personne physique).
 * @member {String} prenom
 */
BodaccImmatriculation.prototype['prenom'] = undefined;

/**
 * Administration (dans le cas d'une personne morale).
 * @member {String} administration
 */
BodaccImmatriculation.prototype['administration'] = undefined;

/**
 * Adresse de l'entreprise concernée par la publication.
 * @member {String} adresse
 */
BodaccImmatriculation.prototype['adresse'] = undefined;


// Implement Bodacc interface:
/**
 * Numéro de parution de la publication.
 * @member {String} numero_parution
 */
Bodacc.prototype['numero_parution'] = undefined;
/**
 * Date de la publication, au format AAAA-MM-JJ.
 * @member {String} date
 */
Bodacc.prototype['date'] = undefined;
/**
 * Numéro d'annonce de la publication.
 * @member {String} numero_annonce
 */
Bodacc.prototype['numero_annonce'] = undefined;
/**
 * Bodacc de la publication (A, B ou C).
 * @member {String} bodacc
 */
Bodacc.prototype['bodacc'] = undefined;
/**
 * Type de la publication parmi la liste suivante : Création, Immatriculation, Modification, Vente, Radiation, Procédure collective, Dépôt des comptes.
 * @member {String} type
 */
Bodacc.prototype['type'] = undefined;
// Implement BodaccImmatriculationAllOf interface:
/**
 * Greffe de publication.
 * @member {String} rcs
 */
BodaccImmatriculationAllOf.prototype['rcs'] = undefined;
/**
 * Nom de l'entreprise concernée par la publication. Correspond à la dénomination en cas de personne morale et à nom + prenom en cas de personne physique.
 * @member {String} nom_entreprise
 */
BodaccImmatriculationAllOf.prototype['nom_entreprise'] = undefined;
/**
 * Vrai si l'entreprise concernée par la publication est une personne morale, faux si c'est une personne physique.
 * @member {Boolean} personne_morale
 */
BodaccImmatriculationAllOf.prototype['personne_morale'] = undefined;
/**
 * Dénomination de l'entreprise concernée par la publication (uniquement en cas de personne morale).
 * @member {String} denomination
 */
BodaccImmatriculationAllOf.prototype['denomination'] = undefined;
/**
 * Nom de la personne physique concernée par la publication (uniquement en cas de personne physique).
 * @member {String} nom
 */
BodaccImmatriculationAllOf.prototype['nom'] = undefined;
/**
 * Prénom de la personne physique concernée par la publication (uniquement en cas de personne physique).
 * @member {String} prenom
 */
BodaccImmatriculationAllOf.prototype['prenom'] = undefined;
/**
 * Administration (dans le cas d'une personne morale).
 * @member {String} administration
 */
BodaccImmatriculationAllOf.prototype['administration'] = undefined;
/**
 * Adresse de l'entreprise concernée par la publication.
 * @member {String} adresse
 */
BodaccImmatriculationAllOf.prototype['adresse'] = undefined;




export default BodaccImmatriculation;

