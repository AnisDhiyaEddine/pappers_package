/**
 * Pappers API
 * L'API de Pappers vous permet de récupérer des informations et documents sur les entreprises françaises à partir de leur numéro SIREN ou SIRET.  Vous devez indiquer votre clé d'API dans les requêtes, en utilisant le paramètre `api_token`.  L'URL d'accès à l'API est https://api.pappers.fr/v2/  Lien vers la documentation de la V1 : https://www.pappers.fr/api/documentation/v1  L'historique des modifications (changelog) est accessible à l'url suivante : https://www.pappers.fr/api/changelog 
 *
 * The version of the OpenAPI document: 2.3.0
 * Contact: support@pappers.fr
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import InlineResponse2005 from '../model/InlineResponse2005';

/**
* SuggestionsAutocomplete service.
* @module api/SuggestionsAutocompleteApi
* @version 2.3.0
*/
export default class SuggestionsAutocompleteApi {

    /**
    * Constructs a new SuggestionsAutocompleteApi. 
    * @alias module:api/SuggestionsAutocompleteApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the suggestions operation.
     * @callback module:api/SuggestionsAutocompleteApi~suggestionsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2005} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Recherche les entreprises qui correspondent à un début de recherche textuelle (type autocomplete).
     * Cette route nécessite généralement d'avoir un temps de réponse très faible. Une URL avec un temps de réponse plus faible a été mise en place : `https://suggestions.pappers.fr/v2?q=googl`. D'autre part, afin de permettre une intégration en front-end la plus directe, cette route ne nécessite pas de token d'authentification.
     * @param {String} q Début de recherche textuelle
     * @param {Object} opts Optional parameters
     * @param {Number} opts.longueur Nombre de résultats. Maximum 100. Valeur par défaut : `10`.
     * @param {module:model/String} opts.cibles Cibles de la recherche, séparées par des virgules. Valeur par défaut : `\"nom_entreprise\"`.
     * @param {module:api/SuggestionsAutocompleteApi~suggestionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse2005}
     */
    suggestions(q, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'q' is set
      if (q === undefined || q === null) {
        throw new Error("Missing the required parameter 'q' when calling suggestions");
      }

      let pathParams = {
      };
      let queryParams = {
        'q': q,
        'longueur': opts['longueur'],
        'cibles': opts['cibles']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse2005;
      return this.apiClient.callApi(
        '/suggestions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
