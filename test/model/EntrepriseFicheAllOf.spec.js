/**
 * Pappers API
 * L'API de Pappers vous permet de récupérer des informations et documents sur les entreprises françaises à partir de leur numéro SIREN ou SIRET.  Vous devez indiquer votre clé d'API dans les requêtes, en utilisant le paramètre `api_token`.  L'URL d'accès à l'API est https://api.pappers.fr/v2/  Lien vers la documentation de la V1 : https://www.pappers.fr/api/documentation/v1  L'historique des modifications (changelog) est accessible à l'url suivante : https://www.pappers.fr/api/changelog 
 *
 * The version of the OpenAPI document: 2.3.0
 * Contact: support@pappers.fr
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PappersApi);
  }
}(this, function(expect, PappersApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new PappersApi.EntrepriseFicheAllOf();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('EntrepriseFicheAllOf', function() {
    it('should create an instance of EntrepriseFicheAllOf', function() {
      // uncomment below and update the code to test EntrepriseFicheAllOf
      //var instane = new PappersApi.EntrepriseFicheAllOf();
      //expect(instance).to.be.a(PappersApi.EntrepriseFicheAllOf);
    });

    it('should have the property siege (base name: "siege")', function() {
      // uncomment below and update the code to test the property siege
      //var instance = new PappersApi.EntrepriseFicheAllOf();
      //expect(instance).to.be();
    });

    it('should have the property diffusable (base name: "diffusable")', function() {
      // uncomment below and update the code to test the property diffusable
      //var instance = new PappersApi.EntrepriseFicheAllOf();
      //expect(instance).to.be();
    });

    it('should have the property sigle (base name: "sigle")', function() {
      // uncomment below and update the code to test the property sigle
      //var instance = new PappersApi.EntrepriseFicheAllOf();
      //expect(instance).to.be();
    });

    it('should have the property objetSocial (base name: "objet_social")', function() {
      // uncomment below and update the code to test the property objetSocial
      //var instance = new PappersApi.EntrepriseFicheAllOf();
      //expect(instance).to.be();
    });

    it('should have the property capitalFormate (base name: "capital_formate")', function() {
      // uncomment below and update the code to test the property capitalFormate
      //var instance = new PappersApi.EntrepriseFicheAllOf();
      //expect(instance).to.be();
    });

    it('should have the property capitalActuelSiVariable (base name: "capital_actuel_si_variable")', function() {
      // uncomment below and update the code to test the property capitalActuelSiVariable
      //var instance = new PappersApi.EntrepriseFicheAllOf();
      //expect(instance).to.be();
    });

    it('should have the property deviseCapital (base name: "devise_capital")', function() {
      // uncomment below and update the code to test the property deviseCapital
      //var instance = new PappersApi.EntrepriseFicheAllOf();
      //expect(instance).to.be();
    });

    it('should have the property numeroRcs (base name: "numero_rcs")', function() {
      // uncomment below and update the code to test the property numeroRcs
      //var instance = new PappersApi.EntrepriseFicheAllOf();
      //expect(instance).to.be();
    });

    it('should have the property dateClotureExercice (base name: "date_cloture_exercice")', function() {
      // uncomment below and update the code to test the property dateClotureExercice
      //var instance = new PappersApi.EntrepriseFicheAllOf();
      //expect(instance).to.be();
    });

    it('should have the property dateClotureExerciceExceptionnelle (base name: "date_cloture_exercice_exceptionnelle")', function() {
      // uncomment below and update the code to test the property dateClotureExerciceExceptionnelle
      //var instance = new PappersApi.EntrepriseFicheAllOf();
      //expect(instance).to.be();
    });

    it('should have the property dateClotureExerciceExceptionnelleFormate (base name: "date_cloture_exercice_exceptionnelle_formate")', function() {
      // uncomment below and update the code to test the property dateClotureExerciceExceptionnelleFormate
      //var instance = new PappersApi.EntrepriseFicheAllOf();
      //expect(instance).to.be();
    });

    it('should have the property prochaineDateClotureExercice (base name: "prochaine_date_cloture_exercice")', function() {
      // uncomment below and update the code to test the property prochaineDateClotureExercice
      //var instance = new PappersApi.EntrepriseFicheAllOf();
      //expect(instance).to.be();
    });

    it('should have the property prochaineDateClotureExerciceFormate (base name: "prochaine_date_cloture_exercice_formate")', function() {
      // uncomment below and update the code to test the property prochaineDateClotureExerciceFormate
      //var instance = new PappersApi.EntrepriseFicheAllOf();
      //expect(instance).to.be();
    });

    it('should have the property economieSocialeSolidaire (base name: "economie_sociale_solidaire")', function() {
      // uncomment below and update the code to test the property economieSocialeSolidaire
      //var instance = new PappersApi.EntrepriseFicheAllOf();
      //expect(instance).to.be();
    });

    it('should have the property dureePersonneMorale (base name: "duree_personne_morale")', function() {
      // uncomment below and update the code to test the property dureePersonneMorale
      //var instance = new PappersApi.EntrepriseFicheAllOf();
      //expect(instance).to.be();
    });

    it('should have the property dernierTraitement (base name: "dernier_traitement")', function() {
      // uncomment below and update the code to test the property dernierTraitement
      //var instance = new PappersApi.EntrepriseFicheAllOf();
      //expect(instance).to.be();
    });

    it('should have the property derniereMiseAJourSirene (base name: "derniere_mise_a_jour_sirene")', function() {
      // uncomment below and update the code to test the property derniereMiseAJourSirene
      //var instance = new PappersApi.EntrepriseFicheAllOf();
      //expect(instance).to.be();
    });

    it('should have the property derniereMiseAJourRcs (base name: "derniere_mise_a_jour_rcs")', function() {
      // uncomment below and update the code to test the property derniereMiseAJourRcs
      //var instance = new PappersApi.EntrepriseFicheAllOf();
      //expect(instance).to.be();
    });

    it('should have the property statutRcs (base name: "statut_rcs")', function() {
      // uncomment below and update the code to test the property statutRcs
      //var instance = new PappersApi.EntrepriseFicheAllOf();
      //expect(instance).to.be();
    });

    it('should have the property greffe (base name: "greffe")', function() {
      // uncomment below and update the code to test the property greffe
      //var instance = new PappersApi.EntrepriseFicheAllOf();
      //expect(instance).to.be();
    });

    it('should have the property codeGreffe (base name: "code_greffe")', function() {
      // uncomment below and update the code to test the property codeGreffe
      //var instance = new PappersApi.EntrepriseFicheAllOf();
      //expect(instance).to.be();
    });

    it('should have the property dateImmatriculationRcs (base name: "date_immatriculation_rcs")', function() {
      // uncomment below and update the code to test the property dateImmatriculationRcs
      //var instance = new PappersApi.EntrepriseFicheAllOf();
      //expect(instance).to.be();
    });

    it('should have the property datePremiereImmatriculationRcs (base name: "date_premiere_immatriculation_rcs")', function() {
      // uncomment below and update the code to test the property datePremiereImmatriculationRcs
      //var instance = new PappersApi.EntrepriseFicheAllOf();
      //expect(instance).to.be();
    });

    it('should have the property dateRadiationRcs (base name: "date_radiation_rcs")', function() {
      // uncomment below and update the code to test the property dateRadiationRcs
      //var instance = new PappersApi.EntrepriseFicheAllOf();
      //expect(instance).to.be();
    });

    it('should have the property numeroTvaIntracommunautaire (base name: "numero_tva_intracommunautaire")', function() {
      // uncomment below and update the code to test the property numeroTvaIntracommunautaire
      //var instance = new PappersApi.EntrepriseFicheAllOf();
      //expect(instance).to.be();
    });

    it('should have the property associeUnique (base name: "associe_unique")', function() {
      // uncomment below and update the code to test the property associeUnique
      //var instance = new PappersApi.EntrepriseFicheAllOf();
      //expect(instance).to.be();
    });

    it('should have the property etablissements (base name: "etablissements")', function() {
      // uncomment below and update the code to test the property etablissements
      //var instance = new PappersApi.EntrepriseFicheAllOf();
      //expect(instance).to.be();
    });

    it('should have the property finances (base name: "finances")', function() {
      // uncomment below and update the code to test the property finances
      //var instance = new PappersApi.EntrepriseFicheAllOf();
      //expect(instance).to.be();
    });

    it('should have the property representants (base name: "representants")', function() {
      // uncomment below and update the code to test the property representants
      //var instance = new PappersApi.EntrepriseFicheAllOf();
      //expect(instance).to.be();
    });

    it('should have the property beneficiairesEffectifs (base name: "beneficiaires_effectifs")', function() {
      // uncomment below and update the code to test the property beneficiairesEffectifs
      //var instance = new PappersApi.EntrepriseFicheAllOf();
      //expect(instance).to.be();
    });

    it('should have the property depotsActes (base name: "depots_actes")', function() {
      // uncomment below and update the code to test the property depotsActes
      //var instance = new PappersApi.EntrepriseFicheAllOf();
      //expect(instance).to.be();
    });

    it('should have the property comptes (base name: "comptes")', function() {
      // uncomment below and update the code to test the property comptes
      //var instance = new PappersApi.EntrepriseFicheAllOf();
      //expect(instance).to.be();
    });

    it('should have the property publicationsBodacc (base name: "publications_bodacc")', function() {
      // uncomment below and update the code to test the property publicationsBodacc
      //var instance = new PappersApi.EntrepriseFicheAllOf();
      //expect(instance).to.be();
    });

    it('should have the property proceduresCollectives (base name: "procedures_collectives")', function() {
      // uncomment below and update the code to test the property proceduresCollectives
      //var instance = new PappersApi.EntrepriseFicheAllOf();
      //expect(instance).to.be();
    });

    it('should have the property procedureCollectiveExiste (base name: "procedure_collective_existe")', function() {
      // uncomment below and update the code to test the property procedureCollectiveExiste
      //var instance = new PappersApi.EntrepriseFicheAllOf();
      //expect(instance).to.be();
    });

    it('should have the property procedureCollectiveEnCours (base name: "procedure_collective_en_cours")', function() {
      // uncomment below and update the code to test the property procedureCollectiveEnCours
      //var instance = new PappersApi.EntrepriseFicheAllOf();
      //expect(instance).to.be();
    });

    it('should have the property derniersStatuts (base name: "derniers_statuts")', function() {
      // uncomment below and update the code to test the property derniersStatuts
      //var instance = new PappersApi.EntrepriseFicheAllOf();
      //expect(instance).to.be();
    });

    it('should have the property extraitImmatriculation (base name: "extrait_immatriculation")', function() {
      // uncomment below and update the code to test the property extraitImmatriculation
      //var instance = new PappersApi.EntrepriseFicheAllOf();
      //expect(instance).to.be();
    });

    it('should have the property rnm (base name: "rnm")', function() {
      // uncomment below and update the code to test the property rnm
      //var instance = new PappersApi.EntrepriseFicheAllOf();
      //expect(instance).to.be();
    });

    it('should have the property marques (base name: "marques")', function() {
      // uncomment below and update the code to test the property marques
      //var instance = new PappersApi.EntrepriseFicheAllOf();
      //expect(instance).to.be();
    });

  });

}));
