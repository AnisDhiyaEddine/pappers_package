/**
 * Pappers API
 * L'API de Pappers vous permet de récupérer des informations et documents sur les entreprises françaises à partir de leur numéro SIREN ou SIRET.  Vous devez indiquer votre clé d'API dans les requêtes, en utilisant le paramètre `api_token`.  L'URL d'accès à l'API est https://api.pappers.fr/v2/  Lien vers la documentation de la V1 : https://www.pappers.fr/api/documentation/v1  L'historique des modifications (changelog) est accessible à l'url suivante : https://www.pappers.fr/api/changelog 
 *
 * The version of the OpenAPI document: 2.3.0
 * Contact: support@pappers.fr
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PappersApi);
  }
}(this, function(expect, PappersApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new PappersApi.EtablissementFiche();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('EtablissementFiche', function() {
    it('should create an instance of EtablissementFiche', function() {
      // uncomment below and update the code to test EtablissementFiche
      //var instane = new PappersApi.EtablissementFiche();
      //expect(instance).to.be.a(PappersApi.EtablissementFiche);
    });

    it('should have the property siret (base name: "siret")', function() {
      // uncomment below and update the code to test the property siret
      //var instance = new PappersApi.EtablissementFiche();
      //expect(instance).to.be();
    });

    it('should have the property siretFormate (base name: "siret_formate")', function() {
      // uncomment below and update the code to test the property siretFormate
      //var instance = new PappersApi.EtablissementFiche();
      //expect(instance).to.be();
    });

    it('should have the property nic (base name: "nic")', function() {
      // uncomment below and update the code to test the property nic
      //var instance = new PappersApi.EtablissementFiche();
      //expect(instance).to.be();
    });

    it('should have the property codePostal (base name: "code_postal")', function() {
      // uncomment below and update the code to test the property codePostal
      //var instance = new PappersApi.EtablissementFiche();
      //expect(instance).to.be();
    });

    it('should have the property ville (base name: "ville")', function() {
      // uncomment below and update the code to test the property ville
      //var instance = new PappersApi.EtablissementFiche();
      //expect(instance).to.be();
    });

    it('should have the property pays (base name: "pays")', function() {
      // uncomment below and update the code to test the property pays
      //var instance = new PappersApi.EtablissementFiche();
      //expect(instance).to.be();
    });

    it('should have the property codePays (base name: "code_pays")', function() {
      // uncomment below and update the code to test the property codePays
      //var instance = new PappersApi.EtablissementFiche();
      //expect(instance).to.be();
    });

    it('should have the property latitude (base name: "latitude")', function() {
      // uncomment below and update the code to test the property latitude
      //var instance = new PappersApi.EtablissementFiche();
      //expect(instance).to.be();
    });

    it('should have the property longitude (base name: "longitude")', function() {
      // uncomment below and update the code to test the property longitude
      //var instance = new PappersApi.EtablissementFiche();
      //expect(instance).to.be();
    });

    it('should have the property etablissementCesse (base name: "etablissement_cesse")', function() {
      // uncomment below and update the code to test the property etablissementCesse
      //var instance = new PappersApi.EtablissementFiche();
      //expect(instance).to.be();
    });

    it('should have the property siege (base name: "siege")', function() {
      // uncomment below and update the code to test the property siege
      //var instance = new PappersApi.EtablissementFiche();
      //expect(instance).to.be();
    });

    it('should have the property etablissementEmployeur (base name: "etablissement_employeur")', function() {
      // uncomment below and update the code to test the property etablissementEmployeur
      //var instance = new PappersApi.EtablissementFiche();
      //expect(instance).to.be();
    });

    it('should have the property effectif (base name: "effectif")', function() {
      // uncomment below and update the code to test the property effectif
      //var instance = new PappersApi.EtablissementFiche();
      //expect(instance).to.be();
    });

    it('should have the property effectifMin (base name: "effectif_min")', function() {
      // uncomment below and update the code to test the property effectifMin
      //var instance = new PappersApi.EtablissementFiche();
      //expect(instance).to.be();
    });

    it('should have the property effectifMax (base name: "effectif_max")', function() {
      // uncomment below and update the code to test the property effectifMax
      //var instance = new PappersApi.EtablissementFiche();
      //expect(instance).to.be();
    });

    it('should have the property trancheEffectif (base name: "tranche_effectif")', function() {
      // uncomment below and update the code to test the property trancheEffectif
      //var instance = new PappersApi.EtablissementFiche();
      //expect(instance).to.be();
    });

    it('should have the property anneeEffectif (base name: "annee_effectif")', function() {
      // uncomment below and update the code to test the property anneeEffectif
      //var instance = new PappersApi.EtablissementFiche();
      //expect(instance).to.be();
    });

    it('should have the property codeNaf (base name: "code_naf")', function() {
      // uncomment below and update the code to test the property codeNaf
      //var instance = new PappersApi.EtablissementFiche();
      //expect(instance).to.be();
    });

    it('should have the property libelleCodeNaf (base name: "libelle_code_naf")', function() {
      // uncomment below and update the code to test the property libelleCodeNaf
      //var instance = new PappersApi.EtablissementFiche();
      //expect(instance).to.be();
    });

    it('should have the property dateDeCreation (base name: "date_de_creation")', function() {
      // uncomment below and update the code to test the property dateDeCreation
      //var instance = new PappersApi.EtablissementFiche();
      //expect(instance).to.be();
    });

    it('should have the property numeroVoie (base name: "numero_voie")', function() {
      // uncomment below and update the code to test the property numeroVoie
      //var instance = new PappersApi.EtablissementFiche();
      //expect(instance).to.be();
    });

    it('should have the property indiceRepetition (base name: "indice_repetition")', function() {
      // uncomment below and update the code to test the property indiceRepetition
      //var instance = new PappersApi.EtablissementFiche();
      //expect(instance).to.be();
    });

    it('should have the property typeVoie (base name: "type_voie")', function() {
      // uncomment below and update the code to test the property typeVoie
      //var instance = new PappersApi.EtablissementFiche();
      //expect(instance).to.be();
    });

    it('should have the property libelleVoie (base name: "libelle_voie")', function() {
      // uncomment below and update the code to test the property libelleVoie
      //var instance = new PappersApi.EtablissementFiche();
      //expect(instance).to.be();
    });

    it('should have the property complementAdresse (base name: "complement_adresse")', function() {
      // uncomment below and update the code to test the property complementAdresse
      //var instance = new PappersApi.EtablissementFiche();
      //expect(instance).to.be();
    });

    it('should have the property adresseLigne1 (base name: "adresse_ligne_1")', function() {
      // uncomment below and update the code to test the property adresseLigne1
      //var instance = new PappersApi.EtablissementFiche();
      //expect(instance).to.be();
    });

    it('should have the property adresseLigne2 (base name: "adresse_ligne_2")', function() {
      // uncomment below and update the code to test the property adresseLigne2
      //var instance = new PappersApi.EtablissementFiche();
      //expect(instance).to.be();
    });

    it('should have the property dateCessation (base name: "date_cessation")', function() {
      // uncomment below and update the code to test the property dateCessation
      //var instance = new PappersApi.EtablissementFiche();
      //expect(instance).to.be();
    });

    it('should have the property domiciliation (base name: "domiciliation")', function() {
      // uncomment below and update the code to test the property domiciliation
      //var instance = new PappersApi.EtablissementFiche();
      //expect(instance).to.be();
    });

  });

}));
